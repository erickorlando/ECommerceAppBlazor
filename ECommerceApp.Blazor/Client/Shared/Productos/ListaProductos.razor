@using ECommerceApp.Blazor.Shared.Response;
@inject NavigationManager NavigationManager
@inject SweetAlertService SweetAlertService

<h3>Lista de Productos</h3>

<div class="container">
    <div class="row pt-4 pb-4">
        <div class="input-group">
            <input type="text" class="form-control m-1" style="padding-right: 5px " placeholder="Buscar..." @bind="TextoBusqueda"/>
            <button class="btn btn-primary" @onclick="OnSearch">Buscar</button>
        </div>
    </div>
</div>
<div class="row">



    @if (Lista == null)
    {
        <LoadingComponent />
    }
    else
    {
        <table class="table table-primary table-striped table-hover" width="80%">
            <thead>
                <tr class="table-primary">
                    <th class="table-primary">
                        Nombre
                    </th>
                    <th>
                        Categoria
                    </th>
                    <th class="table-primary">
                        Precio Unitario
                    </th>
                    <th class="table-primary">
                        Comentarios
                    </th>
                    <th class="table-primary">
                        Acciones
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Lista)
                {
                    <tr class="table-primary">
                        <td class="table-primary"> @item.Nombre</td>
                        <td class="table-primary"> @item.Categoria</td>
                        <td class="table-primary"> S/. @item.PrecioUnitario.ToString("N2")</td>
                        <td class="table-primary"> @item.Comentarios</td>
                        <td>
                            <button class="btn btn-success" @onclick="() => Editar(item.Id)">Editar</button>
                            <button class="btn btn-danger" @onclick="() => Eliminar(item.Id)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    }
</div>

@code
{

    [Parameter]
    public ICollection<ProductoDto>? Lista { get; set; }


    [Parameter]
    public EventCallback OnSearch { get; set; }

    [Parameter]
    public EventCallback<int> OnEliminar { get; set; }

    public string? TextoBusqueda { get; set; }

    private void Editar(int id)
    {
        NavigationManager.NavigateTo($"/productos/editar/{id}");
    }

    private async Task Eliminar(int id)
    {
        var result = await SweetAlertService.FireAsync(new SweetAlertOptions
        {
            Text = "Desea eliminar el registro?",
            Title = "Eliminar",
            Icon = SweetAlertIcon.Question,
            ConfirmButtonText = "Si",
            CancelButtonText = "No",
            ShowCancelButton = true
        });

        if (result.IsConfirmed)
            await OnEliminar.InvokeAsync(id);
    }
}