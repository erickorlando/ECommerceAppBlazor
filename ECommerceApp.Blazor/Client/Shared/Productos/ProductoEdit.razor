<h3>Producto</h3>

<EditForm Model="Request" OnValidSubmit="Guardar">
    
    <DataAnnotationsValidator />

    <div class="mb-3 row">
        <label for="name" class="col-sm-2 col-form-label">Nombre:</label>
        <div class="col-sm-8">
            <InputText class="form-control" id="name" @bind-Value="@Request.Nombre" />
            <ValidationMessage For="@(() => Request.Nombre)" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="sku" class="col-sm-2 col-form-label">Codigo SKU:</label>
        <div class="col-sm-8">
            <InputText class="form-control" id="sku" @bind-Value="@Request.CodigoSku" />
            <ValidationMessage For="() => Request.CodigoSku" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="category" class="col-sm-2 col-form-label">Categoria:</label>
        <div class="col-sm-8">
            <InputSelect class="form-select" id="category" @bind-Value="@Request.IdCategoria">
                <option>-Seleccione-</option>
                @foreach (var item in Categorias)
                {
                    <option value="@item.Id">@item.Nombre</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="mb-3 row">
        <label for="unitprice" class="col-sm-2 col-form-label">Precio Unitario:</label>
        <div class="col-sm-8">
            <InputNumber class="form-control" id="unitprice" @bind-Value="@Request.PrecioUnitario" />
        </div>
    </div>
    <button type="submit" class="btn btn-success">Guardar</button>

</EditForm>

@code {

    [Parameter]
    public ProductoDtoRequest Request { get; set; } = new ProductoDtoRequest();

    [Parameter]
    public ICollection<CategoriaDto> Categorias { get; set; } = new List<CategoriaDto>();

    [Parameter]
    public EventCallback GuardarCallBack { get; set; }

    protected override void OnInitialized()
    {
        Request = new ProductoDtoRequest();
    }

    public async Task Guardar()
    {
        await GuardarCallBack.InvokeAsync();
    }

}