@inject SweetAlertService Swal

<h3>Producto</h3>

<EditForm Model="Request" OnValidSubmit="Guardar">
    
    <DataAnnotationsValidator />

    <div class="mb-3 row">
        <label for="name" class="col-sm-2 col-form-label">Nombre:</label>
        <div class="col-sm-8">
            <InputText class="form-control" id="name" @bind-Value="@Request.Nombre" />
            <ValidationMessage For="@(() => Request.Nombre)" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="sku" class="col-sm-2 col-form-label">Codigo SKU:</label>
        <div class="col-sm-8">
            <InputText class="form-control" id="sku" @bind-Value="@Request.CodigoSku" />
            <ValidationMessage For="() => Request.CodigoSku" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="category" class="col-sm-2 col-form-label">Categoria:</label>
        <div class="col-sm-8">
            <InputSelect class="form-select" id="category" @bind-Value="@Request.CategoriaId">
                <option>-Seleccione-</option>
                @foreach (var item in Categorias)
                {
                    <option value="@item.Id">@item.Nombre</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="mb-3 row">
        <label for="unitprice" class="col-sm-2 col-form-label">Precio Unitario:</label>
        <div class="col-sm-8">
            <InputNumber class="form-control" id="unitprice" @bind-Value="@Request.PrecioUnitario" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="comments" class="col-sm-2 col-form-label">Comentarios:</label>
        <div class="col-sm-8">
            <InputText class="form-control" id="comments" @bind-Value="@Request.Comentarios" />
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            @if (Request.Base64Image is not null)
            {
                <div style="margin:10px">
                    <img src="data:image/jpeg;base64,@Request.Base64Image" alt="@Request.Nombre" style="width: 300px"/>
                </div>
            }
            else
            {
                <img src="@Request.UrlImagen" alt="@Request.Nombre" style="width: 300px"/>    
            }
        </div>
        <div class="card-footer">
            <div>
                <InputFile id="file" accept="image/png, image/jpeg, .webp" 
                           OnChange="OnFileUploaded" 
                           style="display: none"/>
                <label for="file" class="btn btn-warning"><span class="oi oi-camera-slr"></span>Imagen</label>
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-success">Guardar</button>

</EditForm>

@code {

    [Parameter]
    public ProductoDtoRequest Request { get; set; } = new ProductoDtoRequest();

    [Parameter]
    public ICollection<CategoriaDto> Categorias { get; set; } = new List<CategoriaDto>();

    [Parameter]
    public EventCallback GuardarCallBack { get; set; }

    protected override void OnInitialized()
    {
        Request = new ProductoDtoRequest();
    }

    public async Task Guardar()
    {
        await GuardarCallBack.InvokeAsync();
    }

    private async Task OnFileUploaded(InputFileChangeEventArgs e)
    {
        try
        {
            var imagen = e.File;
            var buffer = new byte[imagen.Size];
            var _ = await imagen.OpenReadStream().ReadAsync(buffer);

            Request.Base64Image = Convert.ToBase64String(buffer);
            Request.FileName = imagen.Name;
            Request.UrlImagen = null;
        }
        catch (Exception ex)
        {
            await Swal.FireAsync("Error de archivo", ex.Message);
        }
    }

}